# This is a basic workflow to help you get started with Actions

name: Bump Version

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: '0'
    - name: Bump Version and Push Tag
      id: tag_version
      uses: anothrNick/github-tag-action@1.35.0
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        RELEASE_BRANCHES: master
        TAG_CONTEXT: branch
        DEFAULT_BUMP: patch
        WITH_V: false
    - name: Create a GitHub release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release v${{ steps.tag_version.outputs.new_tag }}
        body: CHANGELOG.md
    - name: Print Version
      env:
        NEW_TAG: ${{ steps.tag_version.outputs.new_tag }}
        TAG: ${{ steps.tag_version.outputs.tag }}
        PART: ${{ steps.tag_version.outputs.part }}
      run: |
        echo $NEW_TAG
        echo $TAG
        echo $PART
    - name: Setup Version ID
      run: |
        VERSION="${{ steps.tag_version.outputs.new_tag }}" ; echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install dependencies
      run: dotnet restore
      working-directory: MyConsoleApp
    - name: Build
      run: dotnet build -property:Version=$VERSION--configuration Release --no-restore MyConsoleApp
      working-directory: MyConsoleApp
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      working-directory: MyConsoleApp
    - name: Publish
      run: dotnet publish --no-build --configuration Release -o publish MyConsoleApp
      working-directory: MyConsoleApp
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./MyConsoleApp/publish
        asset_name: MyConsoleApp.linux-amd64.tar.gz
        asset_content_type: application/gzip
